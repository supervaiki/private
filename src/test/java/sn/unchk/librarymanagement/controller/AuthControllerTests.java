package sn.unchk.librarymanagement.controller;import com.fasterxml.jackson.databind.ObjectMapper;import org.junit.jupiter.api.Test;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.http.MediaType;import org.springframework.test.web.servlet.MockMvc;import org.springframework.test.web.servlet.result.MockMvcResultHandlers;import sn.unchk.librarymanagement.config.TokenPropertiesTests;import sn.unchk.librarymanagement.presentation.dto.request.MemberLoginRequest;import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;import static sn.unchk.librarymanagement.LibraryManagementApplication.ADMIN_PASSWORD;import static sn.unchk.librarymanagement.LibraryManagementApplication.ADMIN_USERNAME;import static sn.unchk.librarymanagement.constant.GlobalConstant.AUTH_BASE_ROUTE;public class AuthControllerTests extends ControllerBaseTest {    @Autowired    public AuthControllerTests(ObjectMapper objectMapper, MockMvc mockMvc, TokenPropertiesTests tokenPropertiesTests) {        super(objectMapper, mockMvc, tokenPropertiesTests);    }    @Test    public void shouldAuthenticateUserWhenInformationIsValid() throws Exception{        var request = new MemberLoginRequest(ADMIN_USERNAME, ADMIN_PASSWORD);        mockMvc.perform(post(AUTH_BASE_ROUTE.concat("/login"))                        .contentType(MediaType.APPLICATION_JSON)                        .content(convert(request)))                .andExpect(status().isOk())                .andDo(MockMvcResultHandlers.print());    }}